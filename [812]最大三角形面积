# 给定包含多个点的集合，从其中取三个点组成三角形，返回能组成的最大三角形的面积。
#
#
# 示例:
# 输入: points = [[0,0],[0,1],[1,0],[0,2],[2,0]]
# 输出: 2
# 解释:
# 这五个点如下图所示。组成的橙色三角形是最大的，面积为2。
#
#
#
#
#  注意:
#
#
#  3 <= points.length <= 50.
#  不存在重复的点。
#  -50 <= points[i][j] <= 50.
#  结果误差值在 10^-6 以内都认为是正确答案。
#
#  Related Topics 数学
#  👍 69 👎 0


# leetcode submit region begin(Prohibit modification and deletion)
from typing import List


class Solution:
    def largestTriangleArea(self, points: List[List[int]]) -> float:
        res=0
        for i in range(len(points)-2):
            for j in range(i+1,len(points)-1):
                for k in range(j+1,len(points)):
                    x1=points[i][0]
                    y1=points[i][1]
                    x2=points[j][0]
                    y2=points[j][1]
                    x3=points[k][0]
                    y3=points[k][1]
                    area=abs((x1*y2-x2*y1+x2*y3-x3*y2+x3*y1-x1*y3)/2)
                    if res<area:
                        res=area
        return res

solution = Solution()
print(solution.largestTriangleArea([[0,0],[0,1],[1,0],[0,2],[2,0]]))

# leetcode submit region end(Prohibit modification and deletion)
